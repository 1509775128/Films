/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.films.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.films.domain.Odetail;
import com.films.domain.Orders;
import com.films.domain.Seat;
import com.films.domain.Selected;
import com.films.domain.Timetable;
import com.films.domain.Users;
import com.films.service.inter.IOrderService;
import com.films.service.inter.IOrdetailService;
import com.films.service.inter.ISeatService;
import com.films.service.inter.ITimeTableService;
import com.films.struts.form.SeatForm;

/** 
 * MyEclipse Struts
 * Creation date: 11-26-2012
 * 
 * XDoclet definition:
 * @struts.action parameter="flag"
 */
public class TicketsAction extends DispatchAction {
	
	private ITimeTableService timeTableService;
	private IOrderService orderService;
	private IOrdetailService ordetailService;
	private ISeatService seatService;
	
	Orders order = null;
	Odetail odetail = null;
	Seat seat = null;
	int ocount = 0;
	
	public void setTimeTableService(ITimeTableService timeTableService) {
		this.timeTableService = timeTableService;
	}
	
	public void setOrderService(IOrderService orderService) {
		this.orderService = orderService;
	}
	
	public void setOrdetailService(IOrdetailService ordetailService) {
		this.ordetailService = ordetailService;
	}

	public void setSeatService(ISeatService seatService) {
		this.seatService = seatService;
	}

	public ActionForward goStep2(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		if(request.getSession().getAttribute("loginUser")!=null){
			String tid = request.getParameter("tid");
			List list = seatService.getPayedSeatByTimetab(Integer.valueOf(tid));			
			request.setAttribute("mtt", timeTableService.findById(Timetable.class, Integer.valueOf(tid)));
			request.setAttribute("checked", list);
			return mapping.findForward("goStep2");
		}else{	
			return mapping.findForward("goLogin");
		}
	}
	
	public ActionForward submitSeat(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//get user
		Users user = (Users) request.getSession().getAttribute("loginUser");
		
		//get timetable
		String tid = request.getParameter("tid"); 
		Timetable timetable =  (Timetable) timeTableService.findById(Timetable.class, Integer.valueOf(tid));
		
		//get tickets count
		SeatForm seatForm = (SeatForm) form;
		if(seatForm.getNums().length==2){
			if(seatForm.getNums()[0]==seatForm.getNums()[1]){
				if(seatForm.getRows()[0]==seatForm.getRows()[1]){
					ocount = 1;					
				}			
			}else{
				ocount = 2;
			}
		}else{
			ocount = seatForm.getNums().length;
		}
		//save orders
		order = new Orders();
		order.setUsers(user);
		order.setOdate(new java.util.Date());
		order.setOstate("no-pay");
		order = orderService.getSaveOrderID(order); //submit to database
				
		//seatService.save(seat);
		
		odetail = new Odetail();
		seat = new Seat();
		if(ocount==1){
			seat.setSerow(seatForm.getRows()[0]);
			seat.setSenum(seatForm.getNums()[0]);
			seat.setHall(timetable.getHall());
			seatService.save(seat);
			odetail.setSeat(seat);
			odetail.setOcount(ocount);
			odetail.setOmoney(timetable.getTticketPrice()*ocount);
			odetail.setOrders(order);
			odetail.setTimetable(timetable);
			ordetailService.save(odetail);
			
		}else if(ocount==2) {
			if(seatForm.getRows().length==1){	
					seat.setSerow(seatForm.getRows()[0]);
					seat.setSenum(seatForm.getNums()[0]);
					seat.setHall(timetable.getHall());
					seatService.save(seat);
					odetail.setSeat(seat);
					odetail.setOcount(ocount);
					odetail.setOmoney(timetable.getTticketPrice()*ocount);
					odetail.setOrders(order);
					odetail.setTimetable(timetable);					
					ordetailService.save(odetail);
					
					seat = new Seat();
					odetail = new Odetail();
					seat.setSerow(seatForm.getRows()[0]);
					seat.setSenum(seatForm.getNums()[1]);
					seat.setHall(timetable.getHall());
					seatService.save(seat);
					odetail.setSeat(seat);
					odetail.setOcount(ocount);
					odetail.setOmoney(timetable.getTticketPrice()*ocount);
					odetail.setOrders(order);
					odetail.setTimetable(timetable);					
					ordetailService.save(odetail);
			}else {
					seat.setSerow(seatForm.getRows()[0]);
					seat.setSenum(seatForm.getNums()[0]);
					seat.setHall(timetable.getHall());
					seatService.save(seat);
					odetail.setSeat(seat);
					odetail.setOcount(ocount);
					odetail.setOmoney(timetable.getTticketPrice()*ocount);
					odetail.setOrders(order);
					odetail.setTimetable(timetable);					
					ordetailService.save(odetail);
					
					seat = new Seat();
					odetail = new Odetail();
					seat.setSerow(seatForm.getRows()[1]);
					seat.setSenum(seatForm.getNums()[1]);
					seat.setHall(timetable.getHall());
					seatService.save(seat);
					odetail.setSeat(seat);
					odetail.setOcount(ocount);
					odetail.setOmoney(timetable.getTticketPrice()*ocount);
					odetail.setOrders(order);
					odetail.setTimetable(timetable);					
					ordetailService.save(odetail);
			}	
		}	
		List list = ordetailService.getOrders(order.getOid());
		if(list.size()==2){
			request.setAttribute("mtt", list.get(0));
			request.setAttribute("seats", list.get(1));
		}else{
			request.setAttribute("mtt", list.get(0));
		}	
		return mapping.findForward("goStep3");
	}
	
	public ActionForward submitOrder(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String oid = request.getParameter("oid");
		//order = (Orders) orderService.findById(Orders.class, Integer.valueOf(oid));
		List list = ordetailService.getByOid(Integer.valueOf(oid));
		if(list.size()==2){
			request.setAttribute("mtt", list.get(0));
			request.setAttribute("seats", list.get(1));
		}else{
			request.setAttribute("mtt", list.get(0));
		}	
		return mapping.findForward("goStep3");
	}
	
	public ActionForward reseat(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		if(request.getSession().getAttribute("loginUser")!=null){
			String oid = request.getParameter("oid");
			List list = ordetailService.getByOid(Integer.valueOf(oid));
			odetail = (Odetail) list.get(0);
			request.setAttribute("mtt", odetail.getTimetable());
			return mapping.findForward("goStep2");
		}else{	
			return mapping.findForward("goLogin");
		}
	}
}