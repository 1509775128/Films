/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.films.struts.action;


import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.films.domain.Film;
import com.films.domain.Hall;
import com.films.domain.Timetable;
import com.films.service.inter.IFilmService;
import com.films.service.inter.IHallService;
import com.films.service.inter.ITimeTableService;
import com.films.struts.form.ShowTableForm;

/** 
 * MyEclipse Struts
 * Creation date: 10-18-2012
 * 
 * XDoclet definition:
 * @struts.action parameter="flag"
 */
public class ShowCenterAction extends DispatchAction {
	
	private IFilmService filmService;
	private IHallService hallService;
	private ITimeTableService timeTableService;
	Timetable timeTable;
	
	public void setTimeTableService(ITimeTableService timeTableService) {
		this.timeTableService = timeTableService;
	}

	public void setHallService(IHallService hallService) {
		this.hallService = hallService;
	}

	public void setFilmService(IFilmService filmService) {
		this.filmService = filmService;
	}

	public ActionForward addShow(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		request.setAttribute("film", filmService.getFilm());
		request.setAttribute("hall", hallService.getHall());
		return mapping.findForward("goAddShow");
	}
	
	public ActionForward postShow(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		ShowTableForm showTableForm = (ShowTableForm) form;
		timeTable = new Timetable();
		timeTable.setTdate(showTableForm.gettDate());
		timeTable.setTtime(showTableForm.gettTime());
		timeTable.setTticketPrice(Float.parseFloat(showTableForm.gettTicketPrice()));
		Film film = (Film) filmService.findById(Film.class, Integer.valueOf(showTableForm.gettFID()));
		Hall hall = (Hall) hallService.findById(Hall.class, Integer.valueOf(showTableForm.gettHallID()));
		timeTable.setFilm(film);
		timeTable.setHall(hall);
		timeTableService.save(timeTable);
		//split page
		String s_pageNow=request.getParameter("pageNow");
		int pageNow=1;
		if(s_pageNow!=null){
			pageNow=Integer.parseInt(s_pageNow);
		}
		request.setAttribute("now", pageNow);
		request.setAttribute("timeTable", timeTableService.showTimeTable(10,pageNow));
		int pageCount=timeTableService.getPageCount(10);
		request.setAttribute("pageCount", pageCount);
		return mapping.findForward("showTable");
	}
	
	public ActionForward delShow(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String ttid = (String) request.getParameter("ttid");
		timeTable = (Timetable) timeTableService.findById(Timetable.class, Integer.valueOf(ttid));
		timeTableService.delete(timeTable);
		//split page
		String s_pageNow=request.getParameter("pageNow");
		int pageNow=1;
		if(s_pageNow!=null){
			pageNow=Integer.parseInt(s_pageNow);
		}
		request.setAttribute("now", pageNow);
		request.setAttribute("timeTable", timeTableService.showTimeTable(10,pageNow));
		int pageCount=timeTableService.getPageCount(10);
		request.setAttribute("pageCount", pageCount);
		return mapping.findForward("showTable");
	}
		
	public ActionForward editShow(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String ttid = (String) request.getParameter("ttid");
		timeTable = (Timetable) timeTableService.findById(Timetable.class, Integer.valueOf(ttid));
		request.setAttribute("hall", hallService.getHall());
		request.setAttribute("tt", timeTable);
		return mapping.findForward("goEditShow");
	}
	
	public ActionForward editSubmit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		ShowTableForm showTableForm = (ShowTableForm) form;
		timeTable = new Timetable();
		Film film = (Film) filmService.findById(Film.class, Integer.valueOf(showTableForm.gettFID()));
		timeTable.setFilm(film);
		timeTable.setTid(Integer.parseInt(showTableForm.getTtid()));
		timeTable.setTdate(showTableForm.gettDate());
		timeTable.setTtime(showTableForm.gettTime());
		timeTable.setTticketPrice(Float.parseFloat(showTableForm.gettTicketPrice()));
		Hall hall = (Hall) hallService.findById(Hall.class, Integer.valueOf(showTableForm.gettHallID()));
		timeTable.setHall(hall);
		timeTableService.update(timeTable);
		//split page
		String s_pageNow=request.getParameter("pageNow");
		int pageNow=1;
		if(s_pageNow!=null){
			pageNow=Integer.parseInt(s_pageNow);
		}
		request.setAttribute("now", pageNow);
		request.setAttribute("timeTable", timeTableService.showTimeTable(10,pageNow));
		int pageCount=timeTableService.getPageCount(10);
		request.setAttribute("pageCount", pageCount);
		return mapping.findForward("showTable");
	}
}