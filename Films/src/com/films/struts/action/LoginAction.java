/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.films.struts.action;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.films.domain.Users;
import com.films.service.inter.IFCommService;
import com.films.service.inter.IOrderService;
import com.films.service.inter.IUserService;
import com.films.struts.form.LoginForm;
import com.films.utils.MyTools;

/** 
 * MyEclipse Struts
 * Creation date: 10-12-2012
 * 
 * XDoclet definition:
 * @struts.action parameter="flag"
 */
public class LoginAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	@Resource
	private IUserService userService;
	private IOrderService orderService;
	private IFCommService fcService;
	public void setFcService(IFCommService fcService) {
		this.fcService = fcService;
	}
	public void setUserService(IUserService userService) {
		this.userService = userService;
	}
	
	public void setOrderService(IOrderService orderService) {
		this.orderService = orderService;
	}


	/**
	 * @method loginOK
	 * @describe check email and password
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward loginOK(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginForm loginForm = (LoginForm) form;
		Users user = new Users();
		user.setUemail(loginForm.getEmail());
		user.setUpassword(MyTools.MD5(loginForm.getPassword()));//调用工具类对密码采用MD5加密
		user = userService.checkUser(user);
		if(user!=null){	//判断用户是否存在，存在继续验证用户身份
			if(user.getUrole().equals("user")){
				request.getSession().setAttribute("sidecom", fcService.getAllCom());
				request.getSession().setAttribute("loginUser", user);
				request.getSession().setAttribute("NPC", orderService.getNPOrder(user.getUid()));
				return mapping.findForward("loginOK");	//身份为普通用户，跳转到普通用户后台
			}else if(user.getUrole().equals("admin")){
				request.getSession().setAttribute("loginUser", user);
				return mapping.findForward("login2admin");	//身份为管理员，跳转到管理员管理后台
			}		
		}
		return mapping.findForward("loginFail");	//身份验证失败，返回登录页面重新登录
	}
}